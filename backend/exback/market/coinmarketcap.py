import requests
from .bybitapi import get_bybit_symbols

API_KEY = "6de2833e-d048-4b60-982b-4d7e17860376"
BYBIT_API_URL = "https://api.bybit.com/v5/market/tickers?category=spot"
CMC_MAP_URL = "https://pro-api.coinmarketcap.com/v1/cryptocurrency/map"
CMC_INFO_URL = "https://pro-api.coinmarketcap.com/v2/cryptocurrency/info"

HEADERS = {
    "Accepts": "application/json",
    "X-CMC_PRO_API_KEY": API_KEY,
}

def get_valid_symbols():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã —Å CoinMarketCap –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏."""
    try:
        response = requests.get(CMC_MAP_URL, headers=HEADERS)
        data = response.json()
        if "data" in data:
            return {coin["symbol"] for coin in data["data"]}
        print("–û—à–∏–±–∫–∞ API CMC:", data["status"]["error_message"])
    except requests.RequestException as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ CMC:", e)
    return set()

def get_coins_info(bybit_symbols, valid_symbols):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –º–æ–Ω–µ—Ç–∞–º –Ω–∞ CoinMarketCap, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∏—Ö —Ñ–∏–ª—å—Ç—Ä—É—è."""
    if not bybit_symbols:
        print("‚ö†Ô∏è –ù–µ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤ CoinMarketCap")
        return []
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–∏–∫–µ—Ä—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –µ—Å—Ç—å –Ω–∞ CMC
    filtered_symbols = [symbol for symbol in bybit_symbols if symbol in valid_symbols and len(symbol) <= 10]

    if not filtered_symbols:
        print("‚ö†Ô∏è –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤ CMC!")
        return []

    symbol_str = ",".join(filtered_symbols)
    print(f"üìå –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã —É CMC: {symbol_str}")

    params = {"symbol": symbol_str}
    response = requests.get(CMC_INFO_URL, headers=HEADERS, params=params)
    data = response.json()

    if "data" not in data:
        print("‚ö†Ô∏è CMC –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã—Ö! –û—Ç–≤–µ—Ç API:", data)
        return []

    coins = [
        {
            "symbol": value[0]["symbol"],
            "name": value[0]["name"],
            "logo": value[0]["logo"]
        }
        for key, value in data["data"].items()
    ]

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(coins)} –º–æ–Ω–µ—Ç –Ω–∞ CMC –∏–∑ {len(filtered_symbols)} –∑–∞–ø—Ä–æ—Å–æ–≤")
    return coins

def get_filtered_coins():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç."""
    bybit_symbols = get_bybit_symbols()  # –ü–æ–ª—É—á–∞–µ–º —Å–∏–º–≤–æ–ª—ã Bybit
    valid_symbols = get_valid_symbols()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç–∏–∫–µ—Ä—ã CMC
    return get_coins_info(bybit_symbols, valid_symbols)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É CMC


