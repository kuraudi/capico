from django.db import models
from django.contrib.auth.models import AbstractUser
from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin

class CustomUserManager(BaseUserManager):
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª–∏"""

    def create_user(self, email, password=None, **extra_fields):
        if not email:
            raise ValueError("Email is required")
        email = self.normalize_email(email)
        user = self.model(email=email, **extra_fields)
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_superuser(self, email, password=None, **extra_fields):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        extra_fields.setdefault("is_staff", True)  # –ù—É–∂–Ω–æ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É
        extra_fields.setdefault("is_superuser", True)  # –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–∞–∑–¥–µ–ª–∞–º
        extra_fields.setdefault("is_active", True)  # –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º
        return self.create_user(email, password, **extra_fields)
    
    def get_by_natural_key(self, email):
        return self.get(email=email)


class BaseUser(AbstractBaseUser):
    email = models.EmailField(unique=True, max_length=100)
    password = models.CharField(max_length=255)    
    refreshToken = models.CharField(max_length=255, blank=True)
    role = models.CharField(max_length=10, blank=True)
    def has_perm(self, perm, obj=None):
        """–ï—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–∞–≤–æ"""
        return True  # –∏–ª–∏ –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∞–≤–∞ –ø–æ –ª–æ–≥–∏–∫–µ

    def has_module_perms(self, app_label):
        """–ï—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é –∞–¥–º–∏–Ω–∫–∏"""
        return True  # –û–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ `True`, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø

    
       # üîπ **–î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è**
    is_active = models.BooleanField(default=True)  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    is_staff = models.BooleanField(default=False)  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
    is_superuser = models.BooleanField(default=False)  # –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ
    

    USERNAME_FIELD = "email"
    objects = CustomUserManager()  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    
    def __str__(self):
        return self.email

# # Create your models here.
# class BaseUser(models.Model):
#     email = models.EmailField(unique=True, max_length=100)
#     password = models.CharField(max_length=255)    
#     refreshToken = models.CharField(max_length=255,blank=True)
#     role = models.CharField(max_length=10,blank=True)
    
#     def __str__(self):
#         return self.email